name: SonarCloud with Coverlet

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, test and analyze
    runs-on: windows-latest
    
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
          
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarScanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory -Force
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          
      - name: Begin SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"Ohme5083_CesiZen" `
            /o:"ohme5083" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.opencover.reportsPaths="./coverage.opencover.xml"
            
      - name: Build solution
        shell: powershell
        run: dotnet build CesiZen.sln --configuration Release
        
      - name: Run tests with coverage
        shell: powershell
        run: |
          dotnet test ./CesiZen.Test/CesiZen.Test.csproj `
            --no-build `
            --configuration Release `
            /p:CollectCoverage=true `
            /p:CoverletOutputFormat=opencover `
            /p:CoverletOutput=./coverage.opencover.xml `
            /p:Exclude="[*.Test]*"
            
      - name: Verify coverage file
        shell: powershell
        run: |
          if (Test-Path "./coverage.opencover.xml") {
            Write-Host "Coverage file found!"
            Get-Content "./coverage.opencover.xml" | Select-Object -First 10
          } else {
            Write-Host "Coverage file NOT found!"
            Get-ChildItem -Name "*.xml"
          }
          
      - name: End SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
